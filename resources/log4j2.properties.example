# Appender'ы описывают конечные способы записи логов куда-либо - в консоль, в файл, в базу данных и т.д.
# Ниже указано, но appender будет использоваться для записи логов в консоль.
appender.console.type = Console
# Имя для appender'а. Используется для ссылки на appender в других частях конфигурации. В частности -
# в rootLogger.appenderRef.stdout.ref
appender.console.name = consoleLogger
# Тип форматирования. PatternLayout позволяет использовать шаблоны вроде описанного ниже
appender.console.layout.type = PatternLayout
# Шаблон форматирования для сообщений в логе. Детали можно найти в документации:
# https://logging.apache.org/log4j/2.x/manual/layouts.html#:~:text=PatternLayout%20Parameters
appender.console.layout.pattern = %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

# Уровень логирования. Иными словами - минимальный уровень логов, который будет записан, а не проигнорирован.
# В данном случае установлен trace - наименьший из возможных уровней, что означает, что будут записываться
# вообще любые сообщения. Чем выше уровень - тем меньше логов будет писаться. Чаще всего стандартным уровнем является,
# info, поскольку на более низких (trace и debug) находятся логи, которые не имеют особого смысла для работы
# и поддержки приложения и полезны лишь для отладки.
rootLogger.level = trace
# Привязываем rootLogger (основной логгер по умолчанию) consoleLogger. То есть все сообщения
# будут использовать именно описанные выше настройки.
rootLogger.appenderRef.stdout.ref = consoleLogger
